{"version":3,"file":"gptfreeprompt-reference-picker-lazy.js?v=f8805428e85065c9fd3e","mappingszkBA;AACA;;;;;;;;;;;;;;;ACvCA","sources":["webpack:///gptfreeprompt/src/views/GptFreePromptCustomPickerElement.vue?vue&type=script&lang=js&","webpack:///gptfreeprompt/src/views/GptFreePromptCustomPickerElement.vue?vue&type=template&id=043c6bdc&scoped=true&","webpack:///gptfreeprompt/src/views/GptFreePromptCustomPickerElement.vue?vue&type=style&index=0&id=043c6bdc&scoped=true&lang=scss&","webpack://gptfreeprompt/./src/views/GptFreePromptCustomPickerElement.vue?2ab4","webpack:///gptfreeprompt/src/views/GptFreePromptCustomPickerElement.vue","webpack://gptfreeprompt/./src/views/GptFreePromptCustomPickerElement.vue?d080","webpack://gptfreeprompt/./src/views/GptFreePromptCustomPickerElement.vue?75d4","webpack://gptfreeprompt/./src/views/GptFreePromptCustomPickerElement.vue?31e8"],"sourcesContent":["import EyeIcon from 'vue-material-design-icons/Eye.vue';\nimport RefreshIcon from 'vue-material-design-icons/Refresh.vue';\nimport ArrowRightIcon from 'vue-material-design-icons/ArrowRight.vue';\nimport ChevronRightIcon from 'vue-material-design-icons/ChevronRight.vue';\nimport ChevronDownIcon from 'vue-material-design-icons/ChevronDown.vue';\nimport HelpCircleIcon from 'vue-material-design-icons/HelpCircle.vue';\nimport NcButton from '@nextcloud/vue/dist/Components/NcButton.js';\nimport NcLoadingIcon from '@nextcloud/vue/dist/Components/NcLoadingIcon.js';\nimport NcTextField from '@nextcloud/vue/dist/Components/NcTextField.js';\nimport NcSelect from '@nextcloud/vue/dist/Components/NcSelect.js';\nimport NcCheckboxRadioSwitch from '@nextcloud/vue/dist/Components/NcCheckboxRadioSwitch.js';\nimport NcUserBubble from '@nextcloud/vue/dist/Components/NcUserBubble.js';\nimport NcRichContenteditable from '@nextcloud/vue/dist/Components/NcRichContenteditable.js';\nimport axios from '@nextcloud/axios';\nimport { generateUrl } from '@nextcloud/router';\nimport { showError } from '@nextcloud/dialogs';\nexport default {\n  name: 'GptFreePromptCustomPickerElement',\n  components: {\n    NcButton,\n    NcLoadingIcon,\n    NcTextField,\n    NcSelect,\n    NcCheckboxRadioSwitch,\n    ChevronRightIcon,\n    ChevronDownIcon,\n    HelpCircleIcon,\n    ArrowRightIcon,\n    NcUserBubble,\n    RefreshIcon,\n    EyeIcon,\n    NcRichContenteditable\n  },\n  props: {\n    providerId: {\n      type: String,\n      required: true\n    },\n    accessible: {\n      type: Boolean,\n      default: false\n    },\n    pickerEnabled: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      query: '',\n      result: null,\n      loading: false,\n      models: [],\n      inputPlaceholder: t('integration_openai', 'What is the matter with putting pineapple on pizza?'),\n      poweredByTitle: '',\n      poweredByUrl: '',\n      modelPlaceholder: t('integration_openai', 'Choose a model'),\n      showAdvanced: false,\n      selectedModel: null,\n      includeQuery: false,\n      completionNumber: 1,\n      maxTokens: 1000,\n      prompts: null\n    };\n  },\n  computed: {\n    showAdvancedIcon() {\n      return this.showAdvanced ? ChevronDownIcon : ChevronRightIcon;\n    },\n    formattedModels() {\n      if (this.models) {\n        return this.models.map(m => {\n          return {\n            id: m.id,\n            value: m.id,\n            label: m.id + ' (' + m.owned_by + ')'\n          };\n        });\n      }\n      return [];\n    },\n    previewButtonLabel() {\n      return this.result !== null ? t('integration_openai', 'Regenerate') : t('integration_openai', 'Preview');\n    },\n    emptyResult() {\n      return this.result.trim() === '';\n    }\n  },\n  watch: {},\n  mounted() {\n    this.focusOnInput();\n    this.getModels();\n    this.getPromptHistory();\n    const capabilities = OC.getCapabilities()?.integration_openai;\n    this.poweredByTitle = capabilities.uses_openai ? t('integration_openai', 'by OpenAI') : t('integration_openai', 'by LocalAI');\n    this.poweredByUrl = capabilities.uses_openai ? 'https://openai.com' : 'https://localai.io/features/text-generation/';\n  },\n  methods: {\n    focusOnInput() {\n      setTimeout(() => {\n        this.$refs['chatgpt-search-input'].$el.getElementsByTagName('input')[0]?.focus();\n      }, 300);\n    },\n    getPromptHistory() {\n      const params = {\n        params: {\n          type: 1\n        }\n      };\n      const url = generateUrl('/apps/integration_openai/prompts');\n      return axios.get(url, params).then(response => {\n        this.prompts = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    getModels() {\n      const url = generateUrl('/apps/integration_openai/models');\n      return axios.get(url).then(response => {\n        this.models = response.data?.data;\n        const defaultModelId = response.data?.default_completion_model_id;\n        const defaultModel = this.models.find(m => m.id === defaultModelId);\n        const modelToSelect = defaultModel ?? this.models[0] ?? null;\n        if (modelToSelect) {\n          this.selectedModel = {\n            id: modelToSelect.id,\n            value: modelToSelect.id,\n            label: modelToSelect.id + ' (' + modelToSelect.owned_by + ')'\n          };\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    saveModel(modelId) {\n      const req = {\n        values: {\n          default_completion_model_id: modelId\n        }\n      };\n      const url = generateUrl('/apps/integration_openai/config');\n      return axios.put(url, req).then(response => {}).catch(error => {\n        showError(t('integration_openai', 'Failed to save OpenAI default model ID') + ': ' + error.response?.request?.responseText);\n      });\n    },\n    submit() {\n      this.$emit('submit', this.result.trim());\n    },\n    insertPrompt(prompt) {\n      if (this.prompts.find(p => p.value === prompt) === undefined) {\n        this.prompts.unshift({\n          id: 0,\n          value: prompt\n        });\n      }\n    },\n    generate() {\n      if (this.query === '') {\n        return;\n      }\n      this.loading = true;\n      const params = {\n        prompt: this.query,\n        n: this.completionNumber,\n        maxTokens: this.maxTokens\n      };\n      if (this.selectedModel) {\n        params.model = this.selectedModel.id;\n        this.saveModel(this.selectedModel.id);\n      }\n      const url = generateUrl('/apps/integration_openai/completions');\n      return axios.post(url, params).then(response => {\n        const data = response.data;\n        if (data.choices && data.choices.length && data.choices.length > 0) {\n          this.processCompletion(data.choices);\n          this.insertPrompt(this.query);\n        } else {\n          this.error = response.data.error;\n        }\n      }).catch(error => {\n        console.error('OpenAI completions request error', error);\n        showError(t('integration_openai', 'OpenAI error') + ': ' + (error.response?.data?.body?.error?.message || error.response?.data?.body?.error?.code || error.response?.data?.error || t('integration_openai', 'Unknown OpenAI API error')));\n      }).then(() => {\n        this.loading = false;\n      });\n    },\n    processCompletion(choices) {\n      const answers = this.selectedModel.id.startsWith('gpt-') ? choices.filter(c => !!c.message?.content).map(c => c.message?.content.replace(/^\\s+|\\s+$/g, '')) : choices.filter(c => !!c.text).map(c => c.text.replace(/^\\s+|\\s+$/g, ''));\n      if (answers.length > 0) {\n        if (answers.length === 1) {\n          this.result = this.includeQuery ? t('integration_openai', 'Prompt') + '\\n' + this.query + '\\n\\n' + t('integration_openai', 'Result') + '\\n' + answers[0] : answers[0];\n        } else {\n          const multiAnswers = answers.map((a, i) => {\n            return t('integration_openai', 'Result {index}', {\n              index: i + 1\n            }) + '\\n' + a;\n          });\n          this.result = this.includeQuery ? t('integration_openai', 'Prompt') + '\\n' + this.query + '\\n\\n' + multiAnswers.join('\\n\\n') : multiAnswers.join('\\n\\n');\n        }\n      }\n    }\n  }\n};","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"chatgpt-picker-content-wrapper\"\n  }, [_c(\"div\", {\n    staticClass: \"chatgpt-picker-content\"\n  }, [_c(\"h2\", [_vm._v(\"\\n\\t\\t\\t\" + _vm._s(_vm.t(\"integration_openai\", \"ChatGPT-like text generation\")) + \"\\n\\t\\t\")]), _vm._v(\" \"), _c(\"a\", {\n    staticClass: \"attribution\",\n    attrs: {\n      target: \"_blank\",\n      href: _vm.poweredByUrl\n    }\n  }, [_vm._v(\"\\n\\t\\t\\t\" + _vm._s(_vm.poweredByTitle) + \"\\n\\t\\t\")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"input-wrapper\"\n  }, [_c(\"NcTextField\", {\n    ref: \"chatgpt-search-input\",\n    attrs: {\n      value: _vm.query,\n      label: _vm.inputPlaceholder,\n      disabled: _vm.loading,\n      \"show-trailing-button\": !!_vm.query\n    },\n    on: {\n      \"update:value\": function ($event) {\n        _vm.query = $event;\n      },\n      keydown: function ($event) {\n        if (!$event.type.indexOf(\"key\") && _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")) return null;\n        return _vm.generate.apply(null, arguments);\n      },\n      \"trailing-button-click\": function ($event) {\n        _vm.query = \"\";\n      }\n    }\n  })], 1), _vm._v(\" \"), _vm.result === null || _vm.query === \"\" ? _c(\"div\", {\n    staticClass: \"prompts\"\n  }, _vm._l(_vm.prompts, function (p) {\n    return _c(\"NcUserBubble\", {\n      key: p.id + p.value,\n      staticClass: \"prompt-bubble\",\n      attrs: {\n        title: p.value,\n        size: 30,\n        \"avatar-image\": \"icon-history\",\n        \"display-name\": p.value\n      },\n      on: {\n        click: function ($event) {\n          _vm.query = p.value;\n        }\n      }\n    });\n  }), 1) : _vm._e(), _vm._v(\" \"), _vm.result !== null ? _c(\"div\", {\n    staticClass: \"preview\"\n  }, [_c(\"h3\", [_vm._v(_vm._s(_vm.t(\"integration_openai\", \"Preview\")))]), _vm._v(\" \"), _c(\"NcRichContenteditable\", {\n    staticClass: \"editable-preview\",\n    attrs: {\n      value: _vm.result,\n      multiline: true,\n      disabled: _vm.loading,\n      placeholder: _vm.t(\"integration_openai\", \"Preview content\"),\n      \"link-autocomplete\": false\n    },\n    on: {\n      \"update:value\": function ($event) {\n        _vm.result = $event;\n      }\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"footer\"\n  }, [_c(\"NcButton\", {\n    staticClass: \"advanced-button\",\n    attrs: {\n      type: \"tertiary\",\n      \"aria-label\": _vm.t(\"integration_openai\", \"Show/hide advanced options\")\n    },\n    on: {\n      click: function ($event) {\n        _vm.showAdvanced = !_vm.showAdvanced;\n      }\n    },\n    scopedSlots: _vm._u([{\n      key: \"icon\",\n      fn: function () {\n        return [_c(_vm.showAdvancedIcon, {\n          tag: \"component\"\n        })];\n      },\n      proxy: true\n    }])\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\" + _vm._s(_vm.t(\"integration_openai\", \"Advanced options\")) + \"\\n\\t\\t\\t\")]), _vm._v(\" \"), _c(\"NcButton\", {\n    attrs: {\n      type: \"secondary\",\n      \"aria-label\": _vm.t(\"integration_openai\", \"Preview text generation by OpenAI\"),\n      disabled: _vm.loading || !_vm.query\n    },\n    on: {\n      click: _vm.generate\n    },\n    scopedSlots: _vm._u([{\n      key: \"icon\",\n      fn: function () {\n        return [_vm.loading ? _c(\"NcLoadingIcon\") : _vm.result !== null ? _c(\"RefreshIcon\") : _c(\"EyeIcon\")];\n      },\n      proxy: true\n    }])\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\" + _vm._s(_vm.previewButtonLabel) + \"\\n\\t\\t\\t\\t\")]), _vm._v(\" \"), _vm.result !== null ? _c(\"NcButton\", {\n    attrs: {\n      type: \"primary\",\n      \"aria-label\": _vm.t(\"integration_openai\", \"Submit text generated by OpenAI\"),\n      disabled: _vm.loading || _vm.emptyResult\n    },\n    on: {\n      click: _vm.submit\n    },\n    scopedSlots: _vm._u([{\n      key: \"icon\",\n      fn: function () {\n        return [_c(\"ArrowRightIcon\")];\n      },\n      proxy: true\n    }], null, false, 1168934321)\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\" + _vm._s(_vm.t(\"integration_openai\", \"Send\")) + \"\\n\\t\\t\\t\\t\")]) : _vm._e()], 1), _vm._v(\" \"), _c(\"div\", {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.showAdvanced,\n      expression: \"showAdvanced\"\n    }],\n    staticClass: \"advanced\"\n  }, [_c(\"div\", {\n    staticClass: \"line\"\n  }, [_c(\"NcCheckboxRadioSwitch\", {\n    staticClass: \"include-query\",\n    attrs: {\n      checked: _vm.includeQuery\n    },\n    on: {\n      \"update:checked\": function ($event) {\n        _vm.includeQuery = $event;\n      }\n    }\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\\t\" + _vm._s(_vm.t(\"integration_openai\", \"Include the prompt in the result\")) + \"\\n\\t\\t\\t\\t\")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"spacer\"\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"line\"\n  }, [_c(\"label\", {\n    attrs: {\n      for: \"nb-results\"\n    }\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\\t\" + _vm._s(_vm.t(\"integration_openai\", \"How many results to generate\")) + \"\\n\\t\\t\\t\\t\")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"spacer\"\n  }), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.completionNumber,\n      expression: \"completionNumber\"\n    }],\n    attrs: {\n      id: \"nb-results\",\n      type: \"number\",\n      min: \"1\",\n      max: \"10\",\n      step: \"1\"\n    },\n    domProps: {\n      value: _vm.completionNumber\n    },\n    on: {\n      input: function ($event) {\n        if ($event.target.composing) return;\n        _vm.completionNumber = $event.target.value;\n      }\n    }\n  })]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"line\"\n  }, [_c(\"label\", {\n    attrs: {\n      for: \"openai-completion-model-select\"\n    }\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\\t\" + _vm._s(_vm.t(\"integration_openai\", \"Model to use\")) + \"\\n\\t\\t\\t\\t\")]), _vm._v(\" \"), _c(\"a\", {\n    attrs: {\n      title: _vm.t(\"integration_openai\", \"More information about OpenAI models\"),\n      href: \"https://beta.openai.com/docs/models\",\n      target: \"_blank\"\n    }\n  }, [_c(\"NcButton\", {\n    attrs: {\n      type: \"tertiary\",\n      \"aria-label\": _vm.t(\"integration_openai\", \"More information about OpenAI models\")\n    },\n    scopedSlots: _vm._u([{\n      key: \"icon\",\n      fn: function () {\n        return [_c(\"HelpCircleIcon\")];\n      },\n      proxy: true\n    }])\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"spacer\"\n  }), _vm._v(\" \"), _c(\"NcSelect\", {\n    staticClass: \"model-select\",\n    attrs: {\n      options: _vm.formattedModels,\n      \"input-id\": \"openai-completion-model-select\"\n    },\n    model: {\n      value: _vm.selectedModel,\n      callback: function ($$v) {\n        _vm.selectedModel = $$v;\n      },\n      expression: \"selectedModel\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"line\"\n  }, [_c(\"label\", {\n    attrs: {\n      for: \"max-tokens\"\n    }\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\\t\" + _vm._s(_vm.t(\"integration_openai\", \"Approximate maximum number of words to generate (tokens)\")) + \"\\n\\t\\t\\t\\t\")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"spacer\"\n  }), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.maxTokens,\n      expression: \"maxTokens\"\n    }],\n    attrs: {\n      id: \"max-tokens\",\n      type: \"number\",\n      min: \"10\",\n      max: \"100000\",\n      step: \"1\"\n    },\n    domProps: {\n      value: _vm.maxTokens\n    },\n    on: {\n      input: function ($event) {\n        if ($event.target.composing) return;\n        _vm.maxTokens = $event.target.value;\n      }\n    }\n  })])])])]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.chatgpt-picker-content-wrapper[data-v-043c6bdc] {\n  width: 100%;\n}\n.chatgpt-picker-content[data-v-043c6bdc] {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 12px 16px 16px 16px;\n}\n.chatgpt-picker-content h2[data-v-043c6bdc] {\n  display: flex;\n  align-items: center;\n}\n.chatgpt-picker-content .prompts[data-v-043c6bdc] {\n  margin-top: 8px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n.chatgpt-picker-content .prompts > *[data-v-043c6bdc] {\n  margin-right: 8px;\n}\n.chatgpt-picker-content .prompt-bubble[data-v-043c6bdc] {\n  max-width: 250px;\n}\n.chatgpt-picker-content .preview[data-v-043c6bdc] {\n  width: 100%;\n}\n.chatgpt-picker-content .preview h3[data-v-043c6bdc] {\n  font-weight: bold;\n}\n.chatgpt-picker-content .preview .editable-preview[data-v-043c6bdc] {\n  width: 100% !important;\n  max-height: 300px !important;\n}\n.chatgpt-picker-content .spacer[data-v-043c6bdc] {\n  flex-grow: 1;\n}\n.chatgpt-picker-content .attribution[data-v-043c6bdc] {\n  color: var(--color-text-maxcontrast);\n  padding-bottom: 8px;\n}\n.chatgpt-picker-content .input-wrapper[data-v-043c6bdc] {\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n.chatgpt-picker-content .prompt-select[data-v-043c6bdc] {\n  width: 100%;\n  margin-top: 4px;\n}\n.chatgpt-picker-content .footer[data-v-043c6bdc] {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: end;\n  margin-top: 12px;\n}\n.chatgpt-picker-content .footer > *[data-v-043c6bdc] {\n  margin-left: 4px;\n}\n.chatgpt-picker-content .advanced[data-v-043c6bdc] {\n  width: 100%;\n  padding: 12px 0;\n}\n.chatgpt-picker-content .advanced .line[data-v-043c6bdc] {\n  display: flex;\n  align-items: center;\n  margin-top: 8px;\n}\n.chatgpt-picker-content .advanced .line input[data-v-043c6bdc] {\n  width: 200px;\n}\n.chatgpt-picker-content .advanced .line .model-select[data-v-043c6bdc] {\n  width: 300px;\n}\n.chatgpt-picker-content .advanced input[type=number][data-v-043c6bdc] {\n  width: 120px;\n  appearance: initial !important;\n  -moz-appearance: initial !important;\n  -webkit-appearance: initial !important;\n}\n.chatgpt-picker-content .advanced .include-query[data-v-043c6bdc] {\n  margin-right: 16px;\n}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GptFreePromptCustomPickerElement.vue?vue&type=style&index=0&id=043c6bdc&scoped=true&lang=scss&\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GptFreePromptCustomPickerElement.vue?vue&type=style&index=0&id=043c6bdc&scoped=true&lang=scss&\";\n       export default content && content.locals ? content.locals : undefined;\n","import { render, staticRenderFns } from \"./GptFreePromptCustomPickerElement.vue?vue&type=template&id=043c6bdc&scoped=true&\"\nimport script from \"./GptFreePromptCustomPickerElement.vue?vue&type=script&lang=js&\"\nexport * from \"./GptFreePromptCustomPickerElement.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GptFreePromptCustomPickerElement.vue?vue&type=style&index=0&id=043c6bdc&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"043c6bdc\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/var/www/html/apps-extra/gptfreeprompt/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('043c6bdc')) {\n      api.createRecord('043c6bdc', component.options)\n    } else {\n      api.reload('043c6bdc', component.options)\n    }\n    module.hot.accept(\"./GptFreePromptCustomPickerElement.vue?vue&type=template&id=043c6bdc&scoped=true&\", function () {\n      api.rerender('043c6bdc', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/views/GptFreePromptCustomPickerElement.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GptFreePromptCustomPickerElement.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GptFreePromptCustomPickerElement.vue?vue&type=script&lang=js&\"","export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GptFreePromptCustomPickerElement.vue?vue&type=template&id=043c6bdc&scoped=true&\"","export * from \"-!../../node_modules/style-loader/dist/cjs.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GptFreePromptCustomPickerElement.vue?vue&type=style&index=0&id=043c6bdc&scoped=true&lang=scss&\""],"names":[],"sourceRoot":""}